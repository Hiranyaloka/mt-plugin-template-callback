Movable Type Plugin: Template Callbacks
---------------------------------------

This is a proof-of-concept plugin. It defines the concept of 'Callbacks' inside a template.

TAGS
----

If offers three tags:

<$mt:TemplateCallback name="callback name" [priority="5"] $>

This runs all the callbacks for the given name
Examples for names: "verytop", "siderbar_primary sidebar_secondary"

<mt:SetTemplateCallback name="callback name" [priority="5"] $>
   ... template code ...
</mt:SetTemplateCallback>

This set a callback for a given name, and priority. 
if no priority was given, 5 is the default

<mt:AreCallbacksRegistred name="callback name">
</mt:AreCallbacksRegistred>

A conditional block, running only if any callback was registered for this name

At the start of the template, please add these lines:

<$mt:var name="callback_prefix" value="publish"$>
<$mt:var name="callback_postfix" value="entry"$>

This specifies the callbacks application and in which page we are now

Callback Names
--------------

A typical callback name is: "publish.verytop.index"
If goes from the application, to the position, and to the specific page name.
In this case, callbacks registered to the following names will be run:
"publish", "publish.verytop" and "publish.verytop.index"

So callback registred to "publish.verytop" will appear in the very top 
of all the pages.

Registering a Callback
----------------------

Create and save a template object, with the following parameters:

  my $tmpl = $app->model('template')->new();
  $tmpl->type('t_callback');
  $tmpl->name('verytop.entry');
  $tmpl->blog_id(0);
  $tmpl->text('<h1>this is a callback</h1>');
  $tmpl->build_interval(5);
  $tmpl->identifier('publish');
  $tmpl->save() or die "failed to save tmpl";

Notes: 
* name can also be "plugin_id::verytop.entry", which will be activated only if the plugin is installed
* blog_id can be 0 or a specific blog number.
* the identifier specify for which application this callback is directed. currently, only 'publish' exists.

If this callback is setting-depended, you can do it on setting-saving, in the following callbacks:

callbacks:
    MT::PluginData::pre_save: $Plugin::Module::plugin_data_pre_save
    save_config_filter.Plugin_Id: $Plugin::Module::register_callbacks

Where the first callback will work for older MT installations, and the second is prefered for new MT versions.

Widgets
-------

The widgets are automatically loaded into these callbacks: 
"publish.sidebar_primary" and "publish.sidebar_secondary", 
with priorities from 3 to 7. If there is only one sidebar, 
they will be mixed together, ordered by priority.

Themes
------

In the attached themes, the following callbacks are used:
before_content, after_content, above_footer, footer, verybuttom, 
verytop, banner, below_banner, htmlhead, between_content.entry_summary

TODO
----

Add Dynamic Publishing support
